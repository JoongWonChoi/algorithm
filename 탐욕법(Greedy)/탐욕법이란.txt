[Greedy란?]

Greedy 알고리즘은 말 그대로 욕심 많은, 이기적인 선택으로 진행하는 알고리즘이다.
연속된 선택의 상황에서 미래를 판단하지 않고 눈앞에 보이는 최적의 선택을 한다는 의미이다.
======================================================
탐욕법의 장점은 간단하고 빠르다는 것이다.
하지만 치명적인 단점은, 언제나 최적의 답이 보장되지는 않는다는 것이다.
======================================================
이러한 탐욕법이 최적의 답을 보장해주는 문제들이 있다.
첫째는 최적 부분 구조(Optimal substructure)이 있는 문제이다.
부분 문제들의 최적의 답을 이용해 전체 문제의 최적의 솔루션을 구할 수 있다는 것이다.
둘쨰는 탐욕적 선택 속성이 있어야한다.
각 단계에서 탐욕적 선택이 최종 답을 구하기 위한 최적의 선택이라면 탐욕법으로 접근하기 알맞는 문제이다.
======================================================
공부를 하다보니, 최적 부분 구조나 탐욕적 선택 속성이나 결국 다음의 선택을 위한 선행되는 최적의 방법이 있다는 의미로 귀결된다고 느꼈다. 결국 같은 의미일 수 있다고 느낀 것이다.

하지만 문제의 전체 틀을 놓고 보면, 이 두 속성은 차이를 보인다.
최적 부분 구조를 다시 이해해보면, 다음 선택을 위한 최적의 해를 찾는 과정이지만, 
크게 보면 문제의 마지막 솔루션을 위해 틀을 구축해놓고 기존 최종 솔루션보다 작은 부분부터 이 해결방법이 맞을지 검사해보며 진행하는 것이라고 보면 된다.
하지만 탐욕적 선택은 말 그대로 눈 앞에 보이는 기로에서 최적의 선택만을 하는 느낌이다.
문제의 전체적인 구조와 틀까지 고려하지는 않는다.

따라서 문제 해결 과정에서 이러한 두가지 요소가 충족되면 탐욕법으로 접근함이 적절하다고 판단된다.


